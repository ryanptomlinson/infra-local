---
- name: traefik repo present
  kubernetes.core.helm_repository:
    name: traefik
    repo_url: https://traefik.github.io/charts

- name: traefik namespace present
  kubernetes.core.k8s:
    name: traefik
    kind: Namespace
    state: present
  run_once: true

- name: traefik service account present
  kubernetes.core.k8s:
    name: traefik
    namespace: traefik
    kind: ServiceAccount
    state: present
  run_once: true

- name: traefik deployed
  kubernetes.core.helm:
    name: traefik
    namespace: traefik
    create_namespace: true
    chart_ref: traefik/traefik
    chart_version: "23.1.0"
    update_repo_cache: true
    values:
      globalArguments:
        - "--global.sendanonymoususage=false"
        - "--global.checknewversion=false"
      additionalArguments:
        - "--serversTransport.insecureSkipVerify=true"
        - "--log.level=INFO"
      ports:
        web:
          redirectTo: websecure
        websecure:
          tls:
            enabled: true
      ingressRoute:
        dashboard:
          enabled: false
      providers:
        kubernetesCRD:
          enabled: true
          ingressClass: traefik-external
          allowExternalNameServices: true
        kubernetesIngress:
          enabled: true
          allowExternalNameServices: true
          publishedService:
            enabled: false
      service:
        enabled: true
        type: LoadBalancer
        spec:
          loadBalancerIP: "{{ lookup('hashi_vault', 'secret=kv/data/traefik:loadBalancerIP') }}"
      serviceAccount:
        name: "traefik"
  run_once: true

- name: Default headers middleware exists
  kubernetes.core.k8s:
    definition:
      apiVersion: traefik.containo.us/v1alpha1
      kind: Middleware
      metadata:
        name: default-headers
        namespace: default
      spec:
        headers:
          browserXssFilter: true
          contentTypeNosniff: true
          forceSTSHeader: true
          stsIncludeSubdomains: true
          stsPreload: true
          stsSeconds: 15552000
          customFrameOptionsValue: SAMEORIGIN
          customRequestHeaders:
            X-Forwarded-Proto: https
  run_once: true

- name: Traefik dashboard credential secret present
  kubernetes.core.k8s:
    definition:
      kind: Secret
      metadata:
        name: traefik-dashboard-auth
        namespace: traefik
      type: Opaque
      data:
        users: "{{ lookup('hashi_vault', 'secret=kv/data/traefik:dashuserencoded') }}"
  run_once: true

- name: Traefik dashboard auth middleware present
  kubernetes.core.k8s:
    definition:
      apiVersion: traefik.containo.us/v1alpha1
      kind: Middleware
      metadata:
        name: traefik-dashboard-basicauth
        namespace: traefik
      spec:
        basicAuth:
          secret: traefik-dashboard-auth
  run_once: true

- name: Default cert present
  kubernetes.core.k8s:
    definition:
      apiVersion: cert-manager.io/v1
      kind: Certificate
      metadata:
        name: default-certificate
        namespace: traefik
      spec:
        secretName: default-certificate
        issuerRef:
          name: letsencrypt-production
          kind: ClusterIssuer
        commonName: "*.local.ryanptomlinson.com"
        dnsNames:
        - "local.ryanptomlinson.com"
        - "*.local.ryanptomlinson.com"
  run_once: true

- name: Default cert referenced in TLSStore
  kubernetes.core.k8s:
    definition:
      apiVersion: traefik.io/v1alpha1
      kind: TLSStore
      metadata:
        name: default
        namespace: traefik
      spec:
        defaultCertificate:
          secretName: default-certificate
  run_once: true

- name: Traefik dashboard IngressRoute present
  kubernetes.core.k8s:
    definition:
      apiVersion: traefik.containo.us/v1alpha1
      kind: IngressRoute
      metadata:
        name: traefik-dashboard
        namespace: traefik
        annotations: 
          kubernetes.io/ingress.class: traefik-external
      spec:
        entryPoints:
          - websecure
        routes:
          - match: Host(`traefik.local.ryanptomlinson.com`)
            kind: Rule
            middlewares:
              - name: traefik-dashboard-basicauth
                namespace: traefik
            services:
              - name: api@internal
                kind: TraefikService
  run_once: true
